<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_rvn_2lg_nmb">
    <title>Data Objects</title>
    <shortdesc>With Data Objects you can add data to a TokenScript. Data objects are in a format
        that allows efficient signing and onchain storage.</shortdesc>
    <conbody>
        <p dir="ltr" id="docs-internal-guid-5821591c-7fff-aba2-b132-ed5627f0c95d">There will be a
            lot of cases where you want to integrate data in the TokenScript. This can be some other
            file describing a function, an image file for a logo, a signed file to attest identity,
            a set of information and much more.</p>
        <p dir="ltr">Data objects are defined by &lt;asnx:module> in TokenScript XML markup.
            TokenScript uses DER-encoded data in a modified ASN.1 format, which is also used for SSL
            certificates or as X.509 like for the Estonian e-residency.</p>
        <p dir="ltr">Data objects can be stored offchain as a file on the wallet device, or onchain
            as part of a smart contract.</p>
        <section><title>Data Structure</title>
        <p dir="ltr" id="docs-internal-guid-9cfcb9e7-7fff-ed55-0a83-60c4178928ef">TokenScript
            created its own format for DataObjects, relying on well established technology. The data
            is structured in a way that it can be put on the blockchain with low gas costs, but also
            used off-chain. It is designed to be interoperable, extensible and longevitable. </p>
        <p dir="ltr">Other than JSON data objects, the data is separated from the scheme. It
            consists of pure data. The scheme for the data is transferred offchain. The data is
            encoded in a string of bytes, separated by structural bytes according to standard DER
            encoding rules. To be used in TokenScript the data is usually written in ASN.X, an XML
            scheme language. </p>
        <p dir="ltr">This data structure has several advantages. Compared with a JSON object it
            reduces gas cost by more than 50%. As a string of DER-encoded bytes it is useful for
            signing, like for an attestation. This data structure has also a better interoperability
            than JSON, and it can be easily extended.</p>
        </section><section><title>Using Data Objects</title>
        <p dir="ltr" id="docs-internal-guid-02889378-7fff-5fcb-10e8-53f68e6218f4">Data objects can
            be used in multiple ways: They can transport information about the token, like a ticket
            number or the date of a soccer match or even a icon or a picture. They can also be the
            data to be signed for an attestation to proof identity or ownership. Finally, they can
            carry more complex operational information, like a blueprint for smart contract
            transactions or a key to interact with a third party API.</p>
        <p dir="ltr">Data objects can be used onchain. They can be part of a smart contract and be
            downloaded from a blockchain, for example, to get the data needed to start an
            attestation process. However, in most cases the data doesn’t need to be onchain. </p>
        <p dir="ltr">For example, when an event organiser issues thousands of ticket, the tickets
            don’t need to be onchain. It is enough when the tickets are data objects ascribed to an
            Ethereum address and signed by the issuer. They can be just a data object. However, when
            the tickets are sold and transfered, the data objects can be used to create an Ethereum
          transaction which proof that the ticket is valid.</p></section>
    </conbody>
</concept>

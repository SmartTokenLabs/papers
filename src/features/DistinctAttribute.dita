<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_y3c_tv2_pmb">
    <title>Distinct Attribute</title>
    <shortdesc>Distinct Attributes are used to identify a token.</shortdesc>
    <conbody>
      <p>A distinct attribute is defined by setting <codeph>distinct</codeph> to
      true:<codeblock>&lt;attribute name="balance" distinct="true">
…
&lt;/attribute></codeblock></p>
        <p>If there is only one distinct attribute in a token, then the number of unique values of
      this attribute determins how many token instances are there.</p>
    <note>Each Token is identified by a attribute-value pair where the attribute has to be a distinct
      attribute. See more in <xref href="../TokenIdentifier.dita"/></note>
        <p>If there is no distinct attribute defined in a Token, TokenScript Engine takes a default
      value <codeph>ownerAddress=${ownerAddress}</codeph> as its <xref
        href="../TokenIdentifier.dita"/>.</p>
        <example>
            <title>Getting Multiple instances of the token defined</title>
            <p>The following code defines a distinct attribute called <varname>tokenId</varname>. If
                the smart contract returns 2 values for it: <ul id="ul_xdd_kcw_zmb">
                    <li><codeph>0x59a7a9fd49fabd07c0f8566ae4be96fcf20be5e1</codeph></li>
                    <li><codeph>0xd915c8AD3241F459a45AdcBBF8af42caA561A154</codeph></li>
                </ul> then the TokenScript engine identifies 2 tokens, each identified with:
                <ul>
                <li><codeph>tokenID=0x59a7a9fd49fabd07c0f8566ae4be96fcf20be5e1</codeph></li>
                <li><codeph>tokenID=0xd915c8AD3241F459a45AdcBBF8af42caA561A154</codeph></li>
                </ul>
            </p>
            <codeblock>&lt;ts:attribute name="tokenId" <b>distinct="true"></b>
  &lt;ts:type>
    &lt;ts:syntax>1.3.6.1.4.1.1466.115.121.1.40&lt;/ts:syntax>
  &lt;/ts:type>
  &lt;ts:origins>
    &lt;ethereum:call function="balanceOf" contract="EntryToken">
      &lt;ts:data>
        &lt;ts:uint256 ref="ownerAddress">&lt;/ts:uint256>
      &lt;/ts:data>
    &lt;/ethereum:call>
  &lt;/ts:origins>
&lt;/ts:attribute></codeblock>
        </example>

        <example>
            <title>A Smart Token identified by a customised attribute</title>
            <p>For example, you have one token defined like
        this:<codeblock>&lt;token name="car">
  …
  &lt;attribute name="VIN" <b>distinct="true"</b>>
    &lt;origins>
      &lt;ethereum:call function="getCars" contract="CarContract"/>
    &lt;/origins>
  &lt;/attribute></codeblock></p>
            <p>Then, depends on how many values are returned, the TokenScript engine should
                interpret that there are that many number of Car Tokens, each with a different
                distinct VIN (Vehicle Identification Number), all of these Car Tokens are instances
                defined by this single TokenScript file.</p>
        </example>

    </conbody>
</concept>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_gts_wkr_cnb">
    <title>The Challenge of Tokenization</title>
    <shortdesc></shortdesc>
    <conbody>
        <p>The car ownership example demonstrates the power of tokenization to erect a frictionless
            market and to integrate digital services. For many markets it is a new paradigm.
            However, the way tokens are used today, as it manifested in the ICO hype of 2017/18, is
            far off from providing what we call tokenization. Most token don't even try to be more
            than a supplement for the payment side.</p>
        <p>To unleash their potential, tokens need to become a lot more sophisticated and fill the
            delivery side. A Token protocol must fulfill several requirements:</p>
        <p><b>Richness</b></p>
        <p>Tokenization needs an endless variety of tokens, which are tailored for their individual
            use-case. This requires bundling the tokens with their <i>transactions rules</i> and
                <i>behaviour patterns</i>. New tokens should be able to enter the ecosystem on an
            abstracted layer, so that they can be traded and used in <i>different contexts</i>. With
            the anticipated proliferation of new plasma subnets, token should also be able to
            seamlessly operate on them.</p>
        <p><b>Embeddedness</b></p>
        <p>Tokenisation must allow users to interact with different systems through the tokens. In
            the car example, the car token contains code to interact with a <i>smart lock</i> (the
                <i>Open</i>, <i>Start</i>, <i>Lock</i> actions) and the maker's own <i>web
                service</i> (the <i>Locate</i> action). The <i>List for sharing</i> is provided by
                <i>another third party service</i> which tokens the usage of the car by hours or
            days and sells them piecemeal. The token must be embedded in different environments and
            used by different services - while the owner must be able to access all these markets
            solely through this Token.</p>
        <p>A token must also be renderable and associated with the actions it can perform in the
            user's wallet. In the car example, if the registration expired, the web component at
            work would paint the Registration Token red or display a warning. Actions like <i>List
                for sharing</i> will not be available with an expired car registration, and the
                integrated
            token interface should clearly pass that message to the user. Token must be rendered
            differently according to what happened to them in the user's wallet. Tokenization
            requires the wallets to correctly react on a large variety of token events.</p>
        <p><b>Flexibility</b></p>
        <p>It must allow new protocols to be developed on tokens. A token never has a finished
            state. There are always options to attach new protocols to it. In the property example,
            collateralisation might be something wishful to add later, as well as identity
            information or the ability to transfer the token through plasma state channels. This has
            to reflect in the user interface, thus there must be a way to deploy trusted code to the
            user-agent's wallet or preferred dapp.</p>
        <p><b>Trust</b></p>
        <p>A token must carry trust relationship and business context to 3rd parties. In the car
            example, the insurance token provides Roadside Assistance service through NRMA. The
            driver might be able to access this through the token of his insurance provider and
            immediately be identified as qualified for help. In both examples the token must carry
            trust relationships, which shouldn't depend on the availability of a certain service,
            but passed directly by the token. Both business context as well as the relationship must
            be part of the token, while being highly available, private and integrative. [^abc].</p>
        <p>[^abc]: Availability: NRMA is online 24/7 but Qantas Insurance can suspend their services
            in public holidays or at night. Privacy: NRMA can learn user's GPS location but Qantas
            Insurance isn't legally allowed to learn it. Integration: Most of NRMA's customers are
            not obtained through Qantas Insurance, so it would be an additional system to integrate
            and extra security concern for NRMA to integrate to Qantas Insurance's web service. Of
            all three, availability might be the most visible. Just imagine how angry a customer
            will be, having his car breaking down in the middle of the barren Australian outback,
            and learn that the road-side assistance can't be authorised because the insurer's web
            service is upgrading "For a better user experience".</p>
    </conbody>
</concept>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="cli_reference_ts-sign">
  <title>Parameters for the <cmdname>ts-sign</cmdname> command</title>
  <shortdesc>ts-sign - TokenScript signing tool</shortdesc>
  <refbody>
    <refsyn id="refsyn_dcx_jkx_ymb">
      <syntaxdiagram>
        <fragment>
          <groupseq>
            <kwd>ts-sign</kwd>
            <kwd>--key</kwd>
            <oper>=</oper>
            <var>key</var>
            <groupcomp importance="optional">
              <kwd>--keyform</kwd>
              <oper>=</oper>
              <var>name</var>
            </groupcomp>
            <groupcomp importance="optional">
              <var>[FILE]...</var>
            </groupcomp>
          </groupseq>
        </fragment>
      </syntaxdiagram>
    </refsyn>
    <section>
      <title>Description</title>
      <p>Sign the TokenScript <parmname>FILE</parmname> - if unspecified, the standard input is
        read.</p>
      <parml>
        <plentry>
          <pt>
            <parmname>--key</parmname>=<varname>key</varname></pt>
          <pt>
            <parmname>-k</parmname>
            <varname>key</varname>
          </pt>
	  <pd><p>Specifies the key to use to sign the TokenScript. This can be a file name, or a key ID if a
              hardware signing module is used.</p>
        <note audience="implementor">Presently, the capacity to connect to a PKCS11 signing module
        is not required. Implementor be aware that such capacity is to be added eventually.</note>
        <p>This parameter can be specified multiple times for multiple keys, since a TokenScript can be
              signed with a <term>Reputation Key</term> and many <term>Trust Keys</term>. See the
              definition of these keys in TokenScript documents.</p></pd>
        </plentry>
        <plentry>
          <pt>
            <parmname>--keyform</parmname>=<varname>formname</varname></pt>
                <pd>
                  <p>The form in which the signing key comes: DER, PEM, Ethereum (Ethereum's JSON
              keystore). The value is case insensitive. When a signing module is configured (for
              PKCS11 or other wallet / HSM), additional values are possible depending on the
              engine.</p>
            <p>If unspecified, and <parmname>key</parmname> refers to a file, then the form is
              determined from the file's extension name.</p><note audience="implementor">the file
                extension names recognised are .der, .pem, .json (meaning Ethereum's JSON keystore
                format).</note>
                </pd>
        </plentry>
      </parml>
    </section>
  </refbody>
</reference>

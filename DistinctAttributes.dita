<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_y3c_tv2_pmb">
    <title>Distinct Attributes</title>
    <shortdesc>Distinct attributes defines whether or not three is a token, or how many are
        there.</shortdesc>
    <conbody>
      <p>A distinct attribute is a Token Attribute that have <codeph>distinct</codeph> set to
          true:<codeblock>&lt;attribute name="balance" distinct="true">
…
&lt;/attribute></codeblock></p>
        <p>It instructs the TokenScript engine to create the number of tokens equal to the number of
            unique values of this attributes.</p>
      <p>This is useful if:</p><ul id="ul_ezz_gbf_pmb">
                <li>You have one contract but it is the origination of multiple tokens to the user,
                    each token can have a TokenScript that defines a different distinct
                    attribute.</li>
                <li>You have multiple non-fungible tokens from the same contract.</li>
            </ul>

        <section id="section_yzy_jbf_pmb">
          <title>Scenario 1: You have 1 contract that defines more than 1 token</title>
            <p>For example, you can have 2 TokenScript files. </p>
            <p>The first
                has:<codeblock>&lt;token name="tokenA">
  …
  &lt;attribute name="balance" distinct="true">
    &lt;origins>
      &lt;ethereum:call function="getTokenABalance" contract="MyContract" as="uint"/>
    &lt;/origins>
  &lt;/attribute></codeblock></p>            <p>The second
                has:<codeblock>&lt;token name="tokenB">
  …
  &lt;attribute name="balance" distinct="true">
    &lt;origin>
      &lt;ethereum:call function="getTokenBBalance" contract="MyContract" as="uint"/>
    &lt;/origin>
  &lt;/attribute></codeblock></p>
            <p>Suppose both returns a value. Although two TokenScript files refer to the same
                contract "MyContract", and even if they point to the same contract address, a
                TokenScript engine should interpret that there are two tokens. However, if both
                TokenScripts has the same distinct attribute from the same value, it's an error and
                the engine might err, or choose to use one of them only.</p>
        </section>
        <section id="section_hpz_scf_pmb">
            <title>Scenario 2: You defined an non-fungible token</title>
            <p>For example, you have 1 TokenScript file like
                this:<codeblock>&lt;token name="car">
  …
  &lt;attribute name="VIN" distinct="true">
    &lt;origins>
      &lt;ethereum:call function="getCars" contract="CarContract"/>
    &lt;/origins>
  &lt;/attribute></codeblock></p>
            <p>Then, depends on how many values are returned, the TokenScript engine should
                interpret that there are that many number of Car Tokens, each with a different
                distinct VIN (Vehicle Identification Number), all of these Car Tokens are instances
                defined by this single TokenScript file.</p>
        </section>

    </conbody>
</concept>
